version: 2

sources:
  - name: staging
    database: "{{ env_var('DBT_DATABASE', 'dez-capstone-project1') }}"
    schema: "{{ env_var('DBT_SCHEMA', 'prod_air_quality_assam_dataset') }}"
    tables:
      - name: ext_historical_source_data
      - name: ext_hourly_source_data
        freshness:  
          warn_after: 
            count: 1
            period: hour
          error_after: 
            count: 2 # <-- Since it is hourly data
            period: hour  

models:
    - name: stg_historical_data
      description: >
       Air Quality data of the available locations for Assam provided by OpenAQ from sensors. Sensors set up date (Feb 2025) 
       to 72 hours before system date. Reference -->> https://docs.openaq.org/aws/about#update-frequency
      columns:
          - name: dateandtime
            description: Timestamp when the resding was recorded
          - name: location_id 
            description: id of the station of the sensor in a city from where the reading is captured
            tests:
            - relationships:
                to: ref('air_quality_location_lookup')
                field: "CAST(location_id AS STRING)"  # Cast seed's INT to STRING.  # PRO TIP: Works in dbt + BigQuery for type coercion!
                severity: warn
          - name: location_name
            description: name of the station of the sensor in a city from where the reading is captured
          - name: sensor_id
            description: id of the sensor that measure the pollutant. We can also consider to be id of pollutant in some cases downstream.
          - name: sensor_name 
            description: name of the sensor that measure the pollutant. We can also consider to be id of pollutant in some cases downstream.
          - name: value
            description: value of concentration of the pollutant in the air
            tests:
            - not_null:
                severity: warn
            - assert_non_negative_values:  # Matches the test macro name
                severity: error
          - name: unit
            description: unit of the value of concentration of the pollutant in the air
           
    - name: stg_hourly_data
      description: >
       Air Quality data of the available locations of Assam provided by OpenAQ from sensors. 
       Hourly air quality data of the available locations for Assam provided by OpenAQ from sensors
      columns:
          - name: dateandtime
            description: Timestamp when the resding was recorded
          - name: location_id 
            description: id of the station of the sensor in a city from where the reading is captured
            tests:
            - relationships:
                to: ref('air_quality_location_lookup')
                field: "CAST(location_id AS STRING)"  # Cast seed's INT to STRING.  # PRO TIP: Works in dbt + BigQuery for type coercion!
                severity: warn
          - name: location_name
            description: name of the station of the sensor in a city from where the reading is captured
          - name: sensor_id
            description: id of the sensor that measure the pollutant. We can also consider to be id of pollutant in some cases downstream. 
                         All properly functioning sensors in Assam have 8 digit sensor_id. For the historical data above, they already send it clean from OpenAQ.
                         But for this hourly (lastest measurement API), we need to filter out those dysfucntional sensor_ids that send incorrect data/
            tests:
              - assert_sensor_id_min_length: 
                 min_length: 8     # Customizable parameter
                 severity: error   # Hard fail if violated
          - name: sensor_name 
            description: name of the sensor that measure the pollutant. We can also consider to be id of pollutant in some cases downstream.
          - name: value
            description: value of concentration of the pollutant in the air
            tests:
            - not_null:
                severity: warn
            - assert_non_negative_values:  # Matches the test macro name
                severity: error
          - name: unit
            description: unit of the value of concentration of the pollutant in the air

